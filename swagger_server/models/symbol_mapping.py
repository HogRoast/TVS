# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.single_field import SingleField  # noqa: F401,E501
from swagger_server.models.single_mapping import SingleMapping  # noqa: F401,E501
from swagger_server import util


class SymbolMapping(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, symbols: List[SingleMapping]=None, fields: List[SingleField]=None):  # noqa: E501
        """SymbolMapping - a model defined in Swagger

        :param symbols: The symbols of this SymbolMapping.  # noqa: E501
        :type symbols: List[SingleMapping]
        :param fields: The fields of this SymbolMapping.  # noqa: E501
        :type fields: List[SingleField]
        """
        self.swagger_types = {
            'symbols': List[SingleMapping],
            'fields': List[SingleField]
        }

        self.attribute_map = {
            'symbols': 'symbols',
            'fields': 'fields'
        }

        self._symbols = symbols
        self._fields = fields

    @classmethod
    def from_dict(cls, dikt) -> 'SymbolMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SymbolMapping of this SymbolMapping.  # noqa: E501
        :rtype: SymbolMapping
        """
        return util.deserialize_model(dikt, cls)

    @property
    def symbols(self) -> List[SingleMapping]:
        """Gets the symbols of this SymbolMapping.


        :return: The symbols of this SymbolMapping.
        :rtype: List[SingleMapping]
        """
        return self._symbols

    @symbols.setter
    def symbols(self, symbols: List[SingleMapping]):
        """Sets the symbols of this SymbolMapping.


        :param symbols: The symbols of this SymbolMapping.
        :type symbols: List[SingleMapping]
        """

        self._symbols = symbols

    @property
    def fields(self) -> List[SingleField]:
        """Gets the fields of this SymbolMapping.

        Array with the only one element `['brokerSymbol']`.  # noqa: E501

        :return: The fields of this SymbolMapping.
        :rtype: List[SingleField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields: List[SingleField]):
        """Sets the fields of this SymbolMapping.

        Array with the only one element `['brokerSymbol']`.  # noqa: E501

        :param fields: The fields of this SymbolMapping.
        :type fields: List[SingleField]
        """

        self._fields = fields
