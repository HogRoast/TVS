# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Duration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, title: str=None, has_date_picker: bool=None, has_time_picker: bool=None):  # noqa: E501
        """Duration - a model defined in Swagger

        :param id: The id of this Duration.  # noqa: E501
        :type id: str
        :param title: The title of this Duration.  # noqa: E501
        :type title: str
        :param has_date_picker: The has_date_picker of this Duration.  # noqa: E501
        :type has_date_picker: bool
        :param has_time_picker: The has_time_picker of this Duration.  # noqa: E501
        :type has_time_picker: bool
        """
        self.swagger_types = {
            'id': str,
            'title': str,
            'has_date_picker': bool,
            'has_time_picker': bool
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'has_date_picker': 'hasDatePicker',
            'has_time_picker': 'hasTimePicker'
        }

        self._id = id
        self._title = title
        self._has_date_picker = has_date_picker
        self._has_time_picker = has_time_picker

    @classmethod
    def from_dict(cls, dikt) -> 'Duration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Duration of this Duration.  # noqa: E501
        :rtype: Duration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Duration.


        :return: The id of this Duration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Duration.


        :param id: The id of this Duration.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Duration.

        Localized title.  # noqa: E501

        :return: The title of this Duration.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Duration.

        Localized title.  # noqa: E501

        :param title: The title of this Duration.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def has_date_picker(self) -> bool:
        """Gets the has_date_picker of this Duration.

        Display date control in Order Ticket for this duration type.  # noqa: E501

        :return: The has_date_picker of this Duration.
        :rtype: bool
        """
        return self._has_date_picker

    @has_date_picker.setter
    def has_date_picker(self, has_date_picker: bool):
        """Sets the has_date_picker of this Duration.

        Display date control in Order Ticket for this duration type.  # noqa: E501

        :param has_date_picker: The has_date_picker of this Duration.
        :type has_date_picker: bool
        """

        self._has_date_picker = has_date_picker

    @property
    def has_time_picker(self) -> bool:
        """Gets the has_time_picker of this Duration.

        Display time control in Order Ticket for this duration type.  # noqa: E501

        :return: The has_time_picker of this Duration.
        :rtype: bool
        """
        return self._has_time_picker

    @has_time_picker.setter
    def has_time_picker(self, has_time_picker: bool):
        """Sets the has_time_picker of this Duration.

        Display time control in Order Ticket for this duration type.  # noqa: E501

        :param has_time_picker: The has_time_picker of this Duration.
        :type has_time_picker: bool
        """

        self._has_time_picker = has_time_picker
