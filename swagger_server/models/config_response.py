# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.account_manager_table import AccountManagerTable  # noqa: F401,E501
from swagger_server.models.duration import Duration  # noqa: F401,E501
from swagger_server.models.pulling_interval import PullingInterval  # noqa: F401,E501
from swagger_server import util


class ConfigResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, account_manager: List[AccountManagerTable]=None, durations: List[Duration]=None, pulling_interval: PullingInterval=None):  # noqa: E501
        """ConfigResponse - a model defined in Swagger

        :param account_manager: The account_manager of this ConfigResponse.  # noqa: E501
        :type account_manager: List[AccountManagerTable]
        :param durations: The durations of this ConfigResponse.  # noqa: E501
        :type durations: List[Duration]
        :param pulling_interval: The pulling_interval of this ConfigResponse.  # noqa: E501
        :type pulling_interval: PullingInterval
        """
        self.swagger_types = {
            'account_manager': List[AccountManagerTable],
            'durations': List[Duration],
            'pulling_interval': PullingInterval
        }

        self.attribute_map = {
            'account_manager': 'accountManager',
            'durations': 'durations',
            'pulling_interval': 'pullingInterval'
        }

        self._account_manager = account_manager
        self._durations = durations
        self._pulling_interval = pulling_interval

    @classmethod
    def from_dict(cls, dikt) -> 'ConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfigResponse of this ConfigResponse.  # noqa: E501
        :rtype: ConfigResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_manager(self) -> List[AccountManagerTable]:
        """Gets the account_manager of this ConfigResponse.

        Localized account manager's tables configuration. Account Manager is a page in the bottom widget. This page can have multiple tables. Data of the tables is filled using `/state` response.  # noqa: E501

        :return: The account_manager of this ConfigResponse.
        :rtype: List[AccountManagerTable]
        """
        return self._account_manager

    @account_manager.setter
    def account_manager(self, account_manager: List[AccountManagerTable]):
        """Sets the account_manager of this ConfigResponse.

        Localized account manager's tables configuration. Account Manager is a page in the bottom widget. This page can have multiple tables. Data of the tables is filled using `/state` response.  # noqa: E501

        :param account_manager: The account_manager of this ConfigResponse.
        :type account_manager: List[AccountManagerTable]
        """

        self._account_manager = account_manager

    @property
    def durations(self) -> List[Duration]:
        """Gets the durations of this ConfigResponse.

        Localized array of durations displayed in Order Ticket.  # noqa: E501

        :return: The durations of this ConfigResponse.
        :rtype: List[Duration]
        """
        return self._durations

    @durations.setter
    def durations(self, durations: List[Duration]):
        """Sets the durations of this ConfigResponse.

        Localized array of durations displayed in Order Ticket.  # noqa: E501

        :param durations: The durations of this ConfigResponse.
        :type durations: List[Duration]
        """

        self._durations = durations

    @property
    def pulling_interval(self) -> PullingInterval:
        """Gets the pulling_interval of this ConfigResponse.


        :return: The pulling_interval of this ConfigResponse.
        :rtype: PullingInterval
        """
        return self._pulling_interval

    @pulling_interval.setter
    def pulling_interval(self, pulling_interval: PullingInterval):
        """Sets the pulling_interval of this ConfigResponse.


        :param pulling_interval: The pulling_interval of this ConfigResponse.
        :type pulling_interval: PullingInterval
        """

        self._pulling_interval = pulling_interval
